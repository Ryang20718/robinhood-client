/*
Robinhood API

Robinhood API Documentation

API version: 3.0.1
Contact: austin.millan@protonmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CryptoPortfolio type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CryptoPortfolio{}

// CryptoPortfolio struct for CryptoPortfolio
type CryptoPortfolio struct {
	AccountId *string `json:"account_id,omitempty"`
	Equity *string `json:"equity,omitempty"`
	ExtendedHoursEquity *string `json:"extended_hours_equity,omitempty"`
	ExtendedHoursMarketValue *string `json:"extended_hours_market_value,omitempty"`
	Id *string `json:"id,omitempty"`
}

// NewCryptoPortfolio instantiates a new CryptoPortfolio object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCryptoPortfolio() *CryptoPortfolio {
	this := CryptoPortfolio{}
	return &this
}

// NewCryptoPortfolioWithDefaults instantiates a new CryptoPortfolio object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCryptoPortfolioWithDefaults() *CryptoPortfolio {
	this := CryptoPortfolio{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *CryptoPortfolio) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoPortfolio) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *CryptoPortfolio) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *CryptoPortfolio) SetAccountId(v string) {
	o.AccountId = &v
}

// GetEquity returns the Equity field value if set, zero value otherwise.
func (o *CryptoPortfolio) GetEquity() string {
	if o == nil || IsNil(o.Equity) {
		var ret string
		return ret
	}
	return *o.Equity
}

// GetEquityOk returns a tuple with the Equity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoPortfolio) GetEquityOk() (*string, bool) {
	if o == nil || IsNil(o.Equity) {
		return nil, false
	}
	return o.Equity, true
}

// HasEquity returns a boolean if a field has been set.
func (o *CryptoPortfolio) HasEquity() bool {
	if o != nil && !IsNil(o.Equity) {
		return true
	}

	return false
}

// SetEquity gets a reference to the given string and assigns it to the Equity field.
func (o *CryptoPortfolio) SetEquity(v string) {
	o.Equity = &v
}

// GetExtendedHoursEquity returns the ExtendedHoursEquity field value if set, zero value otherwise.
func (o *CryptoPortfolio) GetExtendedHoursEquity() string {
	if o == nil || IsNil(o.ExtendedHoursEquity) {
		var ret string
		return ret
	}
	return *o.ExtendedHoursEquity
}

// GetExtendedHoursEquityOk returns a tuple with the ExtendedHoursEquity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoPortfolio) GetExtendedHoursEquityOk() (*string, bool) {
	if o == nil || IsNil(o.ExtendedHoursEquity) {
		return nil, false
	}
	return o.ExtendedHoursEquity, true
}

// HasExtendedHoursEquity returns a boolean if a field has been set.
func (o *CryptoPortfolio) HasExtendedHoursEquity() bool {
	if o != nil && !IsNil(o.ExtendedHoursEquity) {
		return true
	}

	return false
}

// SetExtendedHoursEquity gets a reference to the given string and assigns it to the ExtendedHoursEquity field.
func (o *CryptoPortfolio) SetExtendedHoursEquity(v string) {
	o.ExtendedHoursEquity = &v
}

// GetExtendedHoursMarketValue returns the ExtendedHoursMarketValue field value if set, zero value otherwise.
func (o *CryptoPortfolio) GetExtendedHoursMarketValue() string {
	if o == nil || IsNil(o.ExtendedHoursMarketValue) {
		var ret string
		return ret
	}
	return *o.ExtendedHoursMarketValue
}

// GetExtendedHoursMarketValueOk returns a tuple with the ExtendedHoursMarketValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoPortfolio) GetExtendedHoursMarketValueOk() (*string, bool) {
	if o == nil || IsNil(o.ExtendedHoursMarketValue) {
		return nil, false
	}
	return o.ExtendedHoursMarketValue, true
}

// HasExtendedHoursMarketValue returns a boolean if a field has been set.
func (o *CryptoPortfolio) HasExtendedHoursMarketValue() bool {
	if o != nil && !IsNil(o.ExtendedHoursMarketValue) {
		return true
	}

	return false
}

// SetExtendedHoursMarketValue gets a reference to the given string and assigns it to the ExtendedHoursMarketValue field.
func (o *CryptoPortfolio) SetExtendedHoursMarketValue(v string) {
	o.ExtendedHoursMarketValue = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CryptoPortfolio) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoPortfolio) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CryptoPortfolio) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CryptoPortfolio) SetId(v string) {
	o.Id = &v
}

func (o CryptoPortfolio) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CryptoPortfolio) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.Equity) {
		toSerialize["equity"] = o.Equity
	}
	if !IsNil(o.ExtendedHoursEquity) {
		toSerialize["extended_hours_equity"] = o.ExtendedHoursEquity
	}
	if !IsNil(o.ExtendedHoursMarketValue) {
		toSerialize["extended_hours_market_value"] = o.ExtendedHoursMarketValue
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableCryptoPortfolio struct {
	value *CryptoPortfolio
	isSet bool
}

func (v NullableCryptoPortfolio) Get() *CryptoPortfolio {
	return v.value
}

func (v *NullableCryptoPortfolio) Set(val *CryptoPortfolio) {
	v.value = val
	v.isSet = true
}

func (v NullableCryptoPortfolio) IsSet() bool {
	return v.isSet
}

func (v *NullableCryptoPortfolio) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCryptoPortfolio(val *CryptoPortfolio) *NullableCryptoPortfolio {
	return &NullableCryptoPortfolio{value: val, isSet: true}
}

func (v NullableCryptoPortfolio) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCryptoPortfolio) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


