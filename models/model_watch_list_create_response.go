/*
Robinhood API

Robinhood API Documentation

API version: 3.0.1
Contact: austin.millan@protonmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the WatchListCreateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WatchListCreateResponse{}

// WatchListCreateResponse struct for WatchListCreateResponse
type WatchListCreateResponse struct {
	Name *string `json:"name,omitempty"`
	Url *string `json:"url,omitempty"`
	User *string `json:"user,omitempty"`
}

// NewWatchListCreateResponse instantiates a new WatchListCreateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWatchListCreateResponse() *WatchListCreateResponse {
	this := WatchListCreateResponse{}
	return &this
}

// NewWatchListCreateResponseWithDefaults instantiates a new WatchListCreateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWatchListCreateResponseWithDefaults() *WatchListCreateResponse {
	this := WatchListCreateResponse{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WatchListCreateResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WatchListCreateResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WatchListCreateResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WatchListCreateResponse) SetName(v string) {
	o.Name = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *WatchListCreateResponse) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WatchListCreateResponse) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *WatchListCreateResponse) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *WatchListCreateResponse) SetUrl(v string) {
	o.Url = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *WatchListCreateResponse) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WatchListCreateResponse) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *WatchListCreateResponse) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *WatchListCreateResponse) SetUser(v string) {
	o.User = &v
}

func (o WatchListCreateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WatchListCreateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableWatchListCreateResponse struct {
	value *WatchListCreateResponse
	isSet bool
}

func (v NullableWatchListCreateResponse) Get() *WatchListCreateResponse {
	return v.value
}

func (v *NullableWatchListCreateResponse) Set(val *WatchListCreateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWatchListCreateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWatchListCreateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWatchListCreateResponse(val *WatchListCreateResponse) *NullableWatchListCreateResponse {
	return &NullableWatchListCreateResponse{value: val, isSet: true}
}

func (v NullableWatchListCreateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWatchListCreateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


