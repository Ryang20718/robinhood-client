/*
Robinhood API

Robinhood API Documentation

API version: 3.0.1
Contact: austin.millan@protonmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Portfolio type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Portfolio{}

// Portfolio struct for Portfolio
type Portfolio struct {
	Account *string `json:"account,omitempty"`
	AdjustedEquityPreviousClose *string `json:"adjusted_equity_previous_close,omitempty"`
	Equity *string `json:"equity,omitempty"`
	EquityPreviousClose *string `json:"equity_previous_close,omitempty"`
	ExcessMaintenance *string `json:"excess_maintenance,omitempty"`
	ExcessMaintenanceWithUnclearedDeposits *string `json:"excess_maintenance_with_uncleared_deposits,omitempty"`
	ExcessMargin *string `json:"excess_margin,omitempty"`
	ExcessMarginWithUnclearedDeposits *string `json:"excess_margin_with_uncleared_deposits,omitempty"`
	ExtendedHoursEquity *string `json:"extended_hours_equity,omitempty"`
	ExtendedHoursMarketValue *string `json:"extended_hours_market_value,omitempty"`
	LastCoreEquity *string `json:"last_core_equity,omitempty"`
	LastCoreMarketValue *string `json:"last_core_market_value,omitempty"`
	MarketValue *string `json:"market_value,omitempty"`
	StartDate *string `json:"start_date,omitempty"`
	UnwithdrawableDeposits *string `json:"unwithdrawable_deposits,omitempty"`
	UnwithdrawableGrants *string `json:"unwithdrawable_grants,omitempty"`
	Url *string `json:"url,omitempty"`
	WithdrawableAmount *string `json:"withdrawable_amount,omitempty"`
}

// NewPortfolio instantiates a new Portfolio object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortfolio() *Portfolio {
	this := Portfolio{}
	return &this
}

// NewPortfolioWithDefaults instantiates a new Portfolio object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortfolioWithDefaults() *Portfolio {
	this := Portfolio{}
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *Portfolio) GetAccount() string {
	if o == nil || IsNil(o.Account) {
		var ret string
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Portfolio) GetAccountOk() (*string, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *Portfolio) HasAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given string and assigns it to the Account field.
func (o *Portfolio) SetAccount(v string) {
	o.Account = &v
}

// GetAdjustedEquityPreviousClose returns the AdjustedEquityPreviousClose field value if set, zero value otherwise.
func (o *Portfolio) GetAdjustedEquityPreviousClose() string {
	if o == nil || IsNil(o.AdjustedEquityPreviousClose) {
		var ret string
		return ret
	}
	return *o.AdjustedEquityPreviousClose
}

// GetAdjustedEquityPreviousCloseOk returns a tuple with the AdjustedEquityPreviousClose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Portfolio) GetAdjustedEquityPreviousCloseOk() (*string, bool) {
	if o == nil || IsNil(o.AdjustedEquityPreviousClose) {
		return nil, false
	}
	return o.AdjustedEquityPreviousClose, true
}

// HasAdjustedEquityPreviousClose returns a boolean if a field has been set.
func (o *Portfolio) HasAdjustedEquityPreviousClose() bool {
	if o != nil && !IsNil(o.AdjustedEquityPreviousClose) {
		return true
	}

	return false
}

// SetAdjustedEquityPreviousClose gets a reference to the given string and assigns it to the AdjustedEquityPreviousClose field.
func (o *Portfolio) SetAdjustedEquityPreviousClose(v string) {
	o.AdjustedEquityPreviousClose = &v
}

// GetEquity returns the Equity field value if set, zero value otherwise.
func (o *Portfolio) GetEquity() string {
	if o == nil || IsNil(o.Equity) {
		var ret string
		return ret
	}
	return *o.Equity
}

// GetEquityOk returns a tuple with the Equity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Portfolio) GetEquityOk() (*string, bool) {
	if o == nil || IsNil(o.Equity) {
		return nil, false
	}
	return o.Equity, true
}

// HasEquity returns a boolean if a field has been set.
func (o *Portfolio) HasEquity() bool {
	if o != nil && !IsNil(o.Equity) {
		return true
	}

	return false
}

// SetEquity gets a reference to the given string and assigns it to the Equity field.
func (o *Portfolio) SetEquity(v string) {
	o.Equity = &v
}

// GetEquityPreviousClose returns the EquityPreviousClose field value if set, zero value otherwise.
func (o *Portfolio) GetEquityPreviousClose() string {
	if o == nil || IsNil(o.EquityPreviousClose) {
		var ret string
		return ret
	}
	return *o.EquityPreviousClose
}

// GetEquityPreviousCloseOk returns a tuple with the EquityPreviousClose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Portfolio) GetEquityPreviousCloseOk() (*string, bool) {
	if o == nil || IsNil(o.EquityPreviousClose) {
		return nil, false
	}
	return o.EquityPreviousClose, true
}

// HasEquityPreviousClose returns a boolean if a field has been set.
func (o *Portfolio) HasEquityPreviousClose() bool {
	if o != nil && !IsNil(o.EquityPreviousClose) {
		return true
	}

	return false
}

// SetEquityPreviousClose gets a reference to the given string and assigns it to the EquityPreviousClose field.
func (o *Portfolio) SetEquityPreviousClose(v string) {
	o.EquityPreviousClose = &v
}

// GetExcessMaintenance returns the ExcessMaintenance field value if set, zero value otherwise.
func (o *Portfolio) GetExcessMaintenance() string {
	if o == nil || IsNil(o.ExcessMaintenance) {
		var ret string
		return ret
	}
	return *o.ExcessMaintenance
}

// GetExcessMaintenanceOk returns a tuple with the ExcessMaintenance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Portfolio) GetExcessMaintenanceOk() (*string, bool) {
	if o == nil || IsNil(o.ExcessMaintenance) {
		return nil, false
	}
	return o.ExcessMaintenance, true
}

// HasExcessMaintenance returns a boolean if a field has been set.
func (o *Portfolio) HasExcessMaintenance() bool {
	if o != nil && !IsNil(o.ExcessMaintenance) {
		return true
	}

	return false
}

// SetExcessMaintenance gets a reference to the given string and assigns it to the ExcessMaintenance field.
func (o *Portfolio) SetExcessMaintenance(v string) {
	o.ExcessMaintenance = &v
}

// GetExcessMaintenanceWithUnclearedDeposits returns the ExcessMaintenanceWithUnclearedDeposits field value if set, zero value otherwise.
func (o *Portfolio) GetExcessMaintenanceWithUnclearedDeposits() string {
	if o == nil || IsNil(o.ExcessMaintenanceWithUnclearedDeposits) {
		var ret string
		return ret
	}
	return *o.ExcessMaintenanceWithUnclearedDeposits
}

// GetExcessMaintenanceWithUnclearedDepositsOk returns a tuple with the ExcessMaintenanceWithUnclearedDeposits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Portfolio) GetExcessMaintenanceWithUnclearedDepositsOk() (*string, bool) {
	if o == nil || IsNil(o.ExcessMaintenanceWithUnclearedDeposits) {
		return nil, false
	}
	return o.ExcessMaintenanceWithUnclearedDeposits, true
}

// HasExcessMaintenanceWithUnclearedDeposits returns a boolean if a field has been set.
func (o *Portfolio) HasExcessMaintenanceWithUnclearedDeposits() bool {
	if o != nil && !IsNil(o.ExcessMaintenanceWithUnclearedDeposits) {
		return true
	}

	return false
}

// SetExcessMaintenanceWithUnclearedDeposits gets a reference to the given string and assigns it to the ExcessMaintenanceWithUnclearedDeposits field.
func (o *Portfolio) SetExcessMaintenanceWithUnclearedDeposits(v string) {
	o.ExcessMaintenanceWithUnclearedDeposits = &v
}

// GetExcessMargin returns the ExcessMargin field value if set, zero value otherwise.
func (o *Portfolio) GetExcessMargin() string {
	if o == nil || IsNil(o.ExcessMargin) {
		var ret string
		return ret
	}
	return *o.ExcessMargin
}

// GetExcessMarginOk returns a tuple with the ExcessMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Portfolio) GetExcessMarginOk() (*string, bool) {
	if o == nil || IsNil(o.ExcessMargin) {
		return nil, false
	}
	return o.ExcessMargin, true
}

// HasExcessMargin returns a boolean if a field has been set.
func (o *Portfolio) HasExcessMargin() bool {
	if o != nil && !IsNil(o.ExcessMargin) {
		return true
	}

	return false
}

// SetExcessMargin gets a reference to the given string and assigns it to the ExcessMargin field.
func (o *Portfolio) SetExcessMargin(v string) {
	o.ExcessMargin = &v
}

// GetExcessMarginWithUnclearedDeposits returns the ExcessMarginWithUnclearedDeposits field value if set, zero value otherwise.
func (o *Portfolio) GetExcessMarginWithUnclearedDeposits() string {
	if o == nil || IsNil(o.ExcessMarginWithUnclearedDeposits) {
		var ret string
		return ret
	}
	return *o.ExcessMarginWithUnclearedDeposits
}

// GetExcessMarginWithUnclearedDepositsOk returns a tuple with the ExcessMarginWithUnclearedDeposits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Portfolio) GetExcessMarginWithUnclearedDepositsOk() (*string, bool) {
	if o == nil || IsNil(o.ExcessMarginWithUnclearedDeposits) {
		return nil, false
	}
	return o.ExcessMarginWithUnclearedDeposits, true
}

// HasExcessMarginWithUnclearedDeposits returns a boolean if a field has been set.
func (o *Portfolio) HasExcessMarginWithUnclearedDeposits() bool {
	if o != nil && !IsNil(o.ExcessMarginWithUnclearedDeposits) {
		return true
	}

	return false
}

// SetExcessMarginWithUnclearedDeposits gets a reference to the given string and assigns it to the ExcessMarginWithUnclearedDeposits field.
func (o *Portfolio) SetExcessMarginWithUnclearedDeposits(v string) {
	o.ExcessMarginWithUnclearedDeposits = &v
}

// GetExtendedHoursEquity returns the ExtendedHoursEquity field value if set, zero value otherwise.
func (o *Portfolio) GetExtendedHoursEquity() string {
	if o == nil || IsNil(o.ExtendedHoursEquity) {
		var ret string
		return ret
	}
	return *o.ExtendedHoursEquity
}

// GetExtendedHoursEquityOk returns a tuple with the ExtendedHoursEquity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Portfolio) GetExtendedHoursEquityOk() (*string, bool) {
	if o == nil || IsNil(o.ExtendedHoursEquity) {
		return nil, false
	}
	return o.ExtendedHoursEquity, true
}

// HasExtendedHoursEquity returns a boolean if a field has been set.
func (o *Portfolio) HasExtendedHoursEquity() bool {
	if o != nil && !IsNil(o.ExtendedHoursEquity) {
		return true
	}

	return false
}

// SetExtendedHoursEquity gets a reference to the given string and assigns it to the ExtendedHoursEquity field.
func (o *Portfolio) SetExtendedHoursEquity(v string) {
	o.ExtendedHoursEquity = &v
}

// GetExtendedHoursMarketValue returns the ExtendedHoursMarketValue field value if set, zero value otherwise.
func (o *Portfolio) GetExtendedHoursMarketValue() string {
	if o == nil || IsNil(o.ExtendedHoursMarketValue) {
		var ret string
		return ret
	}
	return *o.ExtendedHoursMarketValue
}

// GetExtendedHoursMarketValueOk returns a tuple with the ExtendedHoursMarketValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Portfolio) GetExtendedHoursMarketValueOk() (*string, bool) {
	if o == nil || IsNil(o.ExtendedHoursMarketValue) {
		return nil, false
	}
	return o.ExtendedHoursMarketValue, true
}

// HasExtendedHoursMarketValue returns a boolean if a field has been set.
func (o *Portfolio) HasExtendedHoursMarketValue() bool {
	if o != nil && !IsNil(o.ExtendedHoursMarketValue) {
		return true
	}

	return false
}

// SetExtendedHoursMarketValue gets a reference to the given string and assigns it to the ExtendedHoursMarketValue field.
func (o *Portfolio) SetExtendedHoursMarketValue(v string) {
	o.ExtendedHoursMarketValue = &v
}

// GetLastCoreEquity returns the LastCoreEquity field value if set, zero value otherwise.
func (o *Portfolio) GetLastCoreEquity() string {
	if o == nil || IsNil(o.LastCoreEquity) {
		var ret string
		return ret
	}
	return *o.LastCoreEquity
}

// GetLastCoreEquityOk returns a tuple with the LastCoreEquity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Portfolio) GetLastCoreEquityOk() (*string, bool) {
	if o == nil || IsNil(o.LastCoreEquity) {
		return nil, false
	}
	return o.LastCoreEquity, true
}

// HasLastCoreEquity returns a boolean if a field has been set.
func (o *Portfolio) HasLastCoreEquity() bool {
	if o != nil && !IsNil(o.LastCoreEquity) {
		return true
	}

	return false
}

// SetLastCoreEquity gets a reference to the given string and assigns it to the LastCoreEquity field.
func (o *Portfolio) SetLastCoreEquity(v string) {
	o.LastCoreEquity = &v
}

// GetLastCoreMarketValue returns the LastCoreMarketValue field value if set, zero value otherwise.
func (o *Portfolio) GetLastCoreMarketValue() string {
	if o == nil || IsNil(o.LastCoreMarketValue) {
		var ret string
		return ret
	}
	return *o.LastCoreMarketValue
}

// GetLastCoreMarketValueOk returns a tuple with the LastCoreMarketValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Portfolio) GetLastCoreMarketValueOk() (*string, bool) {
	if o == nil || IsNil(o.LastCoreMarketValue) {
		return nil, false
	}
	return o.LastCoreMarketValue, true
}

// HasLastCoreMarketValue returns a boolean if a field has been set.
func (o *Portfolio) HasLastCoreMarketValue() bool {
	if o != nil && !IsNil(o.LastCoreMarketValue) {
		return true
	}

	return false
}

// SetLastCoreMarketValue gets a reference to the given string and assigns it to the LastCoreMarketValue field.
func (o *Portfolio) SetLastCoreMarketValue(v string) {
	o.LastCoreMarketValue = &v
}

// GetMarketValue returns the MarketValue field value if set, zero value otherwise.
func (o *Portfolio) GetMarketValue() string {
	if o == nil || IsNil(o.MarketValue) {
		var ret string
		return ret
	}
	return *o.MarketValue
}

// GetMarketValueOk returns a tuple with the MarketValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Portfolio) GetMarketValueOk() (*string, bool) {
	if o == nil || IsNil(o.MarketValue) {
		return nil, false
	}
	return o.MarketValue, true
}

// HasMarketValue returns a boolean if a field has been set.
func (o *Portfolio) HasMarketValue() bool {
	if o != nil && !IsNil(o.MarketValue) {
		return true
	}

	return false
}

// SetMarketValue gets a reference to the given string and assigns it to the MarketValue field.
func (o *Portfolio) SetMarketValue(v string) {
	o.MarketValue = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *Portfolio) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Portfolio) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *Portfolio) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *Portfolio) SetStartDate(v string) {
	o.StartDate = &v
}

// GetUnwithdrawableDeposits returns the UnwithdrawableDeposits field value if set, zero value otherwise.
func (o *Portfolio) GetUnwithdrawableDeposits() string {
	if o == nil || IsNil(o.UnwithdrawableDeposits) {
		var ret string
		return ret
	}
	return *o.UnwithdrawableDeposits
}

// GetUnwithdrawableDepositsOk returns a tuple with the UnwithdrawableDeposits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Portfolio) GetUnwithdrawableDepositsOk() (*string, bool) {
	if o == nil || IsNil(o.UnwithdrawableDeposits) {
		return nil, false
	}
	return o.UnwithdrawableDeposits, true
}

// HasUnwithdrawableDeposits returns a boolean if a field has been set.
func (o *Portfolio) HasUnwithdrawableDeposits() bool {
	if o != nil && !IsNil(o.UnwithdrawableDeposits) {
		return true
	}

	return false
}

// SetUnwithdrawableDeposits gets a reference to the given string and assigns it to the UnwithdrawableDeposits field.
func (o *Portfolio) SetUnwithdrawableDeposits(v string) {
	o.UnwithdrawableDeposits = &v
}

// GetUnwithdrawableGrants returns the UnwithdrawableGrants field value if set, zero value otherwise.
func (o *Portfolio) GetUnwithdrawableGrants() string {
	if o == nil || IsNil(o.UnwithdrawableGrants) {
		var ret string
		return ret
	}
	return *o.UnwithdrawableGrants
}

// GetUnwithdrawableGrantsOk returns a tuple with the UnwithdrawableGrants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Portfolio) GetUnwithdrawableGrantsOk() (*string, bool) {
	if o == nil || IsNil(o.UnwithdrawableGrants) {
		return nil, false
	}
	return o.UnwithdrawableGrants, true
}

// HasUnwithdrawableGrants returns a boolean if a field has been set.
func (o *Portfolio) HasUnwithdrawableGrants() bool {
	if o != nil && !IsNil(o.UnwithdrawableGrants) {
		return true
	}

	return false
}

// SetUnwithdrawableGrants gets a reference to the given string and assigns it to the UnwithdrawableGrants field.
func (o *Portfolio) SetUnwithdrawableGrants(v string) {
	o.UnwithdrawableGrants = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *Portfolio) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Portfolio) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *Portfolio) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *Portfolio) SetUrl(v string) {
	o.Url = &v
}

// GetWithdrawableAmount returns the WithdrawableAmount field value if set, zero value otherwise.
func (o *Portfolio) GetWithdrawableAmount() string {
	if o == nil || IsNil(o.WithdrawableAmount) {
		var ret string
		return ret
	}
	return *o.WithdrawableAmount
}

// GetWithdrawableAmountOk returns a tuple with the WithdrawableAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Portfolio) GetWithdrawableAmountOk() (*string, bool) {
	if o == nil || IsNil(o.WithdrawableAmount) {
		return nil, false
	}
	return o.WithdrawableAmount, true
}

// HasWithdrawableAmount returns a boolean if a field has been set.
func (o *Portfolio) HasWithdrawableAmount() bool {
	if o != nil && !IsNil(o.WithdrawableAmount) {
		return true
	}

	return false
}

// SetWithdrawableAmount gets a reference to the given string and assigns it to the WithdrawableAmount field.
func (o *Portfolio) SetWithdrawableAmount(v string) {
	o.WithdrawableAmount = &v
}

func (o Portfolio) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Portfolio) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.AdjustedEquityPreviousClose) {
		toSerialize["adjusted_equity_previous_close"] = o.AdjustedEquityPreviousClose
	}
	if !IsNil(o.Equity) {
		toSerialize["equity"] = o.Equity
	}
	if !IsNil(o.EquityPreviousClose) {
		toSerialize["equity_previous_close"] = o.EquityPreviousClose
	}
	if !IsNil(o.ExcessMaintenance) {
		toSerialize["excess_maintenance"] = o.ExcessMaintenance
	}
	if !IsNil(o.ExcessMaintenanceWithUnclearedDeposits) {
		toSerialize["excess_maintenance_with_uncleared_deposits"] = o.ExcessMaintenanceWithUnclearedDeposits
	}
	if !IsNil(o.ExcessMargin) {
		toSerialize["excess_margin"] = o.ExcessMargin
	}
	if !IsNil(o.ExcessMarginWithUnclearedDeposits) {
		toSerialize["excess_margin_with_uncleared_deposits"] = o.ExcessMarginWithUnclearedDeposits
	}
	if !IsNil(o.ExtendedHoursEquity) {
		toSerialize["extended_hours_equity"] = o.ExtendedHoursEquity
	}
	if !IsNil(o.ExtendedHoursMarketValue) {
		toSerialize["extended_hours_market_value"] = o.ExtendedHoursMarketValue
	}
	if !IsNil(o.LastCoreEquity) {
		toSerialize["last_core_equity"] = o.LastCoreEquity
	}
	if !IsNil(o.LastCoreMarketValue) {
		toSerialize["last_core_market_value"] = o.LastCoreMarketValue
	}
	if !IsNil(o.MarketValue) {
		toSerialize["market_value"] = o.MarketValue
	}
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	if !IsNil(o.UnwithdrawableDeposits) {
		toSerialize["unwithdrawable_deposits"] = o.UnwithdrawableDeposits
	}
	if !IsNil(o.UnwithdrawableGrants) {
		toSerialize["unwithdrawable_grants"] = o.UnwithdrawableGrants
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.WithdrawableAmount) {
		toSerialize["withdrawable_amount"] = o.WithdrawableAmount
	}
	return toSerialize, nil
}

type NullablePortfolio struct {
	value *Portfolio
	isSet bool
}

func (v NullablePortfolio) Get() *Portfolio {
	return v.value
}

func (v *NullablePortfolio) Set(val *Portfolio) {
	v.value = val
	v.isSet = true
}

func (v NullablePortfolio) IsSet() bool {
	return v.isSet
}

func (v *NullablePortfolio) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortfolio(val *Portfolio) *NullablePortfolio {
	return &NullablePortfolio{value: val, isSet: true}
}

func (v NullablePortfolio) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortfolio) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


